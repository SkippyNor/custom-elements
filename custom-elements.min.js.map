{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementState.js","src/CustomElementInternals.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js","src/custom-elements.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","module$$src$AlreadyConstructedMarker","default","reservedTagList","Set","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","node","nextSibling","parentNode","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","localName","getAttribute","importNode","import","has","add","child","firstChild","shadowRoot","__CE_shadowRoot","module$$src$Utilities","isValidCustomElementName","isValidCustomElementName$$module$$src$Utilities","reserved","validForm","test","isConnected","isConnected$$module$$src$Utilities","nativeValue","undefined","current","__CE_isImportDocument","Document","window","ShadowRoot","host","setPropertyUnchecked","setPropertyUnchecked$$module$$src$Utilities","destination","name","value","CustomElementState","custom","failed","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","localNameToDefinition","get","constructorToDefinition","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","__CE_state","module$$src$CustomElementState","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","options","upgrade","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","constructionStack","result","Error","pop","e","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","module$$src$CustomElementInternals","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","addedNodes","j","module$$src$DocumentConstructionObserver","Deferred","_resolve","_value","_promise","Promise","resolve","toPromise","module$$src$Deferred","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","pendingDefinitions","localNameToUpgradableElements","upgradableElements","shift","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","module$$src$CustomElementRegistry","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","XULElement","XULElement_innerHTML","XULElement_insertAdjacentElement","module$$src$Patch$Native","$jscompDefaultExport$$module$$src$Patch$HTMLElement","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","NS_HTML","module$$src$Patch$Interface$ParentNode","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","nodeWasConnected","ownerDocument","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","before","after","wasConnected","replaceWith","remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","init","console","warn","rawDiv","innerHTML","content","module$$src$Patch$Interface$ChildNode","priorCustomElements","module$$src$Patch$HTMLElement","module$$src$Patch$Document","module$$src$Patch$Node","module$$src$Patch$Element","customElements"],"mappings":"A;aAOC,IAAA,EAAA,EAAA,CAEDA,EAAe,IAFfC,QAAA,EAAA,EAEeC,EAAAC,QAAA,CAAAH,C,CCTd,IAAA,EAAA,EAAA,CAAKI,EAAkB,IAAIC,GAAJ,CAAQ,kHAAA,MAAA,CAAA,GAAA,CAAR,CA8CxBC,SAASC,EAA4B,CAACC,CAAD,CAAOC,CAAP,CAAc,CAEjD,IAAA,CAAOC,CAAP,EAAeA,CAAf,GAAwBF,CAAxB,EAAiCG,CAAAD,CAAAC,YAAjC,CAAA,CACED,CAAA,CAAOA,CAAAE,WAET,OAASF,EAAF,EAAUA,CAAV,GAAmBF,CAAnB,CAAkCE,CAAAC,YAAlC,CAA2B,IALe;AAsB5CE,QAASC,EAA0B,CAACN,CAAD,CAAOO,CAAP,CAAiBC,CAAjB,CAA6C,CAA5BA,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAiB,IAAIX,GAArB,CAAAW,CAEzD,KADA,IAAIN,EAAOF,CACX,CAAOE,CAAP,CAAA,CAAa,CACX,GAAIA,CAAAO,SAAJ,GAAsBC,IAAAC,aAAtB,CAAyC,CACvC,IAAMC,EAAkCV,CAExCK,EAAA,CAASK,CAAT,CAEA,KAAMC,EAAYD,CAAAC,UAClB,IAAkB,MAAlB,GAAIA,CAAJ,EAA4D,QAA5D,GAA4BD,CAAAE,aAAA,CAAqB,KAArB,CAA5B,CAAsE,CAG9DC,CAAAA,CAAmCH,CAAAI,OACzC,IAAID,CAAJ,WAA0BL,KAA1B,EAAmC,CAAAF,CAAAS,IAAA,CAAmBF,CAAnB,CAAnC,CAIE,IAFAP,CAAAU,IAAA,CAAmBH,CAAnB,CAESI,CAAAA,CAAAA,CAAQJ,CAAAK,WAAjB,CAAwCD,CAAxC,CAA+CA,CAA/C,CAAuDA,CAAAhB,YAAvD,CACEG,CAAA,CAA2Ba,CAA3B,CAAkCZ,CAAlC,CAA4CC,CAA5C,CAOJN,EAAA,CAAOH,CAAA,CAA6BC,CAA7B,CAAmCY,CAAnC,CACP,SAjBoE,CAAtE,IAkBO,IAAkB,UAAlB,GAAIC,CAAJ,CAA8B,CAKnCX,CAAA,CAAOH,CAAA,CAA6BC,CAA7B,CAAmCY,CAAnC,CACP,SANmC,CAWrC,GADMS,CACN,CADmBT,CAAAU,gBACnB,CACE,IAASH,CAAT,CAAiBE,CAAAD,WAAjB,CAAwCD,CAAxC,CAA+CA,CAA/C,CAAuDA,CAAAhB,YAAvD,CACEG,CAAA,CAA2Ba,CAA3B,CAAkCZ,CAAlC,CAA4CC,CAA5C,CArCmC,CA0CzCN,CAAA,CAAsBA,CArDjBkB,WAAA,CAqDiBlB,CArDEkB,WAAnB,CAAsCrB,CAAA,CAqD3BC,CArD2B,CAqDrBE,CArDqB,CAUhC,CAFwE;AArDvEqB,CAAAC,yBAAA,CAATC,QAAiC,CAACZ,CAAD,CAAY,CAClD,IAAMa,EAAW9B,CAAAqB,IAAA,CAAoBJ,CAApB,CACXc,EAAAA,CAAY,kCAAAC,KAAA,CAAwCf,CAAxC,CAClB,OAAO,CAACa,CAAR,EAAoBC,CAH8B,CAWpCJ,EAAAM,YAAA,CAATC,QAAoB,CAAC5B,CAAD,CAAO,CAEhC,IAAM6B,EAAc7B,CAAA2B,YACpB,IAAoBG,IAAAA,EAApB,GAAID,CAAJ,CACE,MAAOA,EAKT,KAAA,CAAOE,CAAP,EAAoB,EAAAA,CAAAC,sBAAA,EAAiCD,CAAjC,WAAoDE,SAApD,CAApB,CAAA,CACEF,CAAA,CAAUA,CAAA7B,WAAV,GAAiCgC,MAAAC,WAAA,EAAqBJ,CAArB,WAAwCI,WAAxC,CAAqDJ,CAAAK,KAArD,CAAoEN,IAAAA,EAArG,CAEF,OAAO,EAAGC,CAAAA,CAAH,EAAe,EAAAA,CAAAC,sBAAA,EAAiCD,CAAjC,WAAoDE,SAApD,CAAf,CAZyB,CA0ClBZ,EAAAjB,2BAAA,CAAAA,CA0DAiB,EAAAgB,qBAAA,CAATC,QAA6B,CAACC,CAAD,CAAcC,CAAd,CAAoBC,CAApB,CAA2B,CAC7DF,CAAA,CAAYC,CAAZ,CAAA,CAAoBC,CADyC,C,CC3H9D,IAAA,EAAA,CAKc,QALYC,CACzBC,OAAQ,CADiBD,CAEzBE,OAAQ,CAFiBF,CAA1B,C,CCHA,IAAA,EAAA,EAICG,SADmBC,EACR,EAAG,CAEZ,IAAAC,uBAAA,CAA8B,IAAIC,GAGlC,KAAAC,yBAAA,CAAgC,IAAID,GAGpC,KAAAE,SAAA,CAAgB,EAGhB,KAAAC,YAAA,CAAmB,CAAA,CAXP,CAkBd,CAAA,UAAA,cAAA,CAAAC,QAAa,CAACzC,CAAD,CAAY0C,CAAZ,CAAwB,CACnC,IAAAN,uBAAAO,IAAA,CAAgC3C,CAAhC,CAA2C0C,CAA3C,CACA,KAAAJ,yBAAAK,IAAA,CAAkCD,CAAAR,YAAlC,CAA0DQ,CAA1D,CAFmC,CASrC,EAAA,UAAA,sBAAA,CAAAE,QAAqB,CAAC5C,CAAD,CAAY,CAC/B,MAAO,KAAAoC,uBAAAS,IAAA,CAAgC7C,CAAhC,CADwB,CAQjC,EAAA,UAAA,wBAAA,CAAA8C,QAAuB,CAACZ,CAAD,CAAc,CACnC,MAAO,KAAAI,yBAAAO,IAAA,CAAkCX,CAAlC,CAD4B,CAOrC,EAAA,UAAA,SAAA,CAAAa,QAAQ,CAACC,CAAD,CAAW,CACjB,IAAAR,YAAA,CAAmB,CAAA,CACnB,KAAAD,SAAAU,KAAA,CAAmBD,CAAnB,CAFiB,CAQnB;CAAA,UAAA,UAAA,CAAAE,QAAS,CAAC7D,CAAD,CAAO,CAAA,IAAA,EAAA,IACT,KAAAmD,YAAL,EAEA9B,CAAAjB,2BAAA,CAAqCJ,CAArC,CAA2C,QAAA,CAAAU,CAAA,CAAW,CAAA,MAAA,EAAAoD,MAAA,CAAWpD,CAAX,CAAA,CAAtD,CAHc,CAShB,EAAA,UAAA,MAAA,CAAAoD,QAAK,CAAC9D,CAAD,CAAO,CACV,GAAK,IAAAmD,YAAL,EAEIY,CAAA/D,CAAA+D,aAFJ,CAEA,CACA/D,CAAA+D,aAAA,CAAoB,CAAA,CAEpB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAd,SAAAe,OAApB,CAA0CD,CAAA,EAA1C,CACE,IAAAd,SAAA,CAAcc,CAAd,CAAA,CAAiBhE,CAAjB,CAJF,CAHU,CAcZ,EAAA,UAAA,YAAA,CAAAkE,QAAW,CAACpE,CAAD,CAAO,CAChB,IAAMqE,EAAW,EAEjB9C,EAAAjB,2BAAA,CAAqCN,CAArC,CAA2C,QAAA,CAAAY,CAAA,CAAW,CAAA,MAAAyD,EAAAP,KAAA,CAAclD,CAAd,CAAA,CAAtD,CAEA,KAASsD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBG,CAAAF,OAApB,CAAqCD,CAAA,EAArC,CAA0C,CACxC,IAAMtD,EAAUyD,CAAA,CAASH,CAAT,CACZtD,EAAA0D,WAAJ,GAA2BC,CAAA5E,QAAAkD,OAA3B,CACE,IAAA2B,kBAAA,CAAuB5D,CAAvB,CADF,CAGE,IAAA6D,eAAA,CAAoB7D,CAApB,CALsC,CAL1B,CAkBlB;CAAA,UAAA,eAAA,CAAA8D,QAAc,CAAC1E,CAAD,CAAO,CACnB,IAAMqE,EAAW,EAEjB9C,EAAAjB,2BAAA,CAAqCN,CAArC,CAA2C,QAAA,CAAAY,CAAA,CAAW,CAAA,MAAAyD,EAAAP,KAAA,CAAclD,CAAd,CAAA,CAAtD,CAEA,KAASsD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBG,CAAAF,OAApB,CAAqCD,CAAA,EAArC,CAA0C,CACxC,IAAMtD,EAAUyD,CAAA,CAASH,CAAT,CACZtD,EAAA0D,WAAJ,GAA2BC,CAAA5E,QAAAkD,OAA3B,EACE,IAAA8B,qBAAA,CAA0B/D,CAA1B,CAHsC,CALvB,CA+ErB;CAAA,UAAA,oBAAA,CAAAgE,QAAmB,CAAC5E,CAAD,CAAO6E,CAAP,CAAqB,CAAdA,CAAA,CAAA,IAAA,EAAA,GAAAA,CAAA,CAAU,EAAV,CAAAA,CAAc,KAAA,EAAA,IAAA,CAChCrE,EAAiBqE,CAAArE,eAAjBA,EAA2C,IAAIX,GADf,CAEhCiF,EAAUD,CAAAC,QAAVA,EAA8B,QAAA,CAAAlE,CAAA,CAAW,CAAA,MAAA,EAAA6D,eAAA,CAAoB7D,CAApB,CAAA,CAFT,CAIhCyD,EAAW,EA6CjB9C,EAAAjB,2BAAA,CAAqCN,CAArC,CA3CuB+E,QAAA,CAAAnE,CAAA,CAAW,CAChC,GAA0B,MAA1B,GAAIA,CAAAC,UAAJ,EAAoE,QAApE,GAAoCD,CAAAE,aAAA,CAAqB,KAArB,CAApC,CAA8E,CAG5E,IAAMC,EAAmCH,CAAAI,OAErCD,EAAJ,WAA0BL,KAA1B,EAA4D,UAA5D,GAAkCK,CAAAiE,WAAlC,EACEjE,CAAAmB,sBAGA,CAHmC,CAAA,CAGnC,CAAAnB,CAAAkE,iBAAA,CAA8B,CAAA,CAJhC,EAQErE,CAAAsE,iBAAA,CAAyB,MAAzB,CAAiC,QAAA,EAAM,CACrC,IAAMnE,EAAmCH,CAAAI,OAErCD,EAAAoE,yBAAJ,GACApE,CAAAoE,yBAeA,CAfsC,CAAA,CAetC,CAbApE,CAAAmB,sBAaA;AAbmC,CAAA,CAanC,CAVAnB,CAAAkE,iBAUA,CAV8B,CAAA,CAU9B,CAH6B,IAAIpF,GAAJ,CAAQW,CAAR,CAG7B,CAFAA,CAAA4E,OAAA,CAAsBrE,CAAtB,CAEA,CAAA,CAAA6D,oBAAA,CAAyB7D,CAAzB,CAAqC,CAACP,eAAAA,CAAD,CAAiBsE,QAAAA,CAAjB,CAArC,CAhBA,CAHqC,CAAvC,CAb0E,CAA9E,IAoCET,EAAAP,KAAA,CAAclD,CAAd,CArC8B,CA2ClC,CAA2DJ,CAA3D,CAEA,IAAI,IAAA6C,YAAJ,CACE,IAASa,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBG,CAAAF,OAApB,CAAqCD,CAAA,EAArC,CACE,IAAAF,MAAA,CAAWK,CAAA,CAASH,CAAT,CAAX,CAIJ,KAASA,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBG,CAAAF,OAApB,CAAqCD,CAAA,EAArC,CACEY,CAAA,CAAQT,CAAA,CAASH,CAAT,CAAR,CA1DoC,CAiExC;CAAA,UAAA,eAAA,CAAAO,QAAc,CAAC7D,CAAD,CAAU,CAEtB,GAAqBoB,IAAAA,EAArB,GADqBpB,CAAA0D,WACrB,CAAA,CAEA,IAAMf,EAAa,IAAAE,sBAAA,CAA2B7C,CAAAC,UAA3B,CACnB,IAAK0C,CAAL,CAAA,CAEAA,CAAA8B,kBAAAvB,KAAA,CAAkClD,CAAlC,CAEA,KAAMmC,EAAcQ,CAAAR,YACpB,IAAI,CACF,GAAI,CAEF,GADauC,IAAKvC,CAClB,GAAenC,CAAf,CACE,KAAU2E,MAAJ,CAAU,4EAAV,CAAN,CAHA,CAAJ,OAKU,CACRhC,CAAA8B,kBAAAG,IAAA,EADQ,CANR,CASF,MAAOC,CAAP,CAAU,CAEV,KADA7E,EAAA0D,WACMmB,CADelB,CAAA5E,QAAAmD,OACf2C,CAAAA,CAAN,CAFU,CAKZ7E,CAAA0D,WAAA,CAAqBC,CAAA5E,QAAAkD,OACrBjC,EAAA8E,gBAAA,CAA0BnC,CAE1B,IAAIA,CAAAoC,yBAAJ,CAEE,IADMC,CACG1B,CADkBX,CAAAqC,mBAClB1B,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoB0B,CAAAzB,OAApB,CAA+CD,CAAA,EAA/C,CAAoD,CAClD,IAAMxB,EAAOkD,CAAA,CAAmB1B,CAAnB,CAAb,CACMvB,EAAQ/B,CAAAE,aAAA,CAAqB4B,CAArB,CACA;IAAd,GAAIC,CAAJ,EACE,IAAAgD,yBAAA,CAA8B/E,CAA9B,CAAuC8B,CAAvC,CAA6C,IAA7C,CAAmDC,CAAnD,CAA0D,IAA1D,CAJgD,CASlDpB,CAAAM,YAAA,CAAsBjB,CAAtB,CAAJ,EACE,IAAA4D,kBAAA,CAAuB5D,CAAvB,CAlCF,CAHA,CAFsB,CA8CxB,EAAA,UAAA,kBAAA,CAAA4D,QAAiB,CAAC5D,CAAD,CAAU,CACzB,IAAM2C,EAAa3C,CAAA8E,gBACfnC,EAAAiB,kBAAJ,EACEjB,CAAAiB,kBAAAqB,KAAA,CAAkCjF,CAAlC,CAHuB,CAU3B,EAAA,UAAA,qBAAA,CAAA+D,QAAoB,CAAC/D,CAAD,CAAU,CAC5B,IAAM2C,EAAa3C,CAAA8E,gBACfnC,EAAAoB,qBAAJ,EACEpB,CAAAoB,qBAAAkB,KAAA,CAAqCjF,CAArC,CAH0B,CAc9B;CAAA,UAAA,yBAAA,CAAA+E,QAAwB,CAAC/E,CAAD,CAAU8B,CAAV,CAAgBoD,CAAhB,CAA0BC,CAA1B,CAAoCC,CAApC,CAA+C,CACrE,IAAMzC,EAAa3C,CAAA8E,gBAEjBnC,EAAAoC,yBADF,EAEiD,EAFjD,CAEEpC,CAAAqC,mBAAAK,QAAA,CAAsCvD,CAAtC,CAFF,EAIEa,CAAAoC,yBAAAE,KAAA,CAAyCjF,CAAzC,CAAkD8B,CAAlD,CAAwDoD,CAAxD,CAAkEC,CAAlE,CAA4EC,CAA5E,CANmE,CAlT1DE,EAAAvG,QAAA,CAAAqD,C,CCHd,IAAA,EAAA,EAGCD,SADmBoD,EACR,CAACC,CAAD,CAAYC,CAAZ,CAAiB,CAI1B,IAAAC,WAAA,CAAkBF,CAKlB,KAAAG,UAAA,CAAiBF,CAKjB,KAAAG,UAAA,CAAiBxE,IAAAA,EAKjB,KAAAsE,WAAA1B,oBAAA,CAAoC,IAAA2B,UAApC,CAEkC,UAAlC,GAAI,IAAAA,UAAAvB,WAAJ,GACE,IAAAwB,UAMA,CANiB,IAAIC,gBAAJ,CAAqB,IAAAC,iBAAAC,KAAA,CAA2B,IAA3B,CAArB,CAMjB,CAAA,IAAAH,UAAAI,QAAA,CAAuB,IAAAL,UAAvB,CAAuC,CACrCM,UAAW,CAAA,CAD0B,CAErCC,QAAS,CAAA,CAF4B,CAAvC,CAPF,CArB0B,CAmC5B,CAAA,UAAA,WAAA,CAAAC,QAAU,EAAG,CACP,IAAAP,UAAJ,EACE,IAAAA,UAAAO,WAAA,EAFS,CASb;CAAA,UAAA,iBAAA,CAAAL,QAAgB,CAACM,CAAD,CAAY,CAI1B,IAAMhC,EAAa,IAAAuB,UAAAvB,WACA,cAAnB,GAAIA,CAAJ,EAAmD,UAAnD,GAAoCA,CAApC,EACE,IAAA+B,WAAA,EAGF,KAAS7C,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB8C,CAAA7C,OAApB,CAAsCD,CAAA,EAAtC,CAEE,IADA,IAAM+C,EAAaD,CAAA,CAAU9C,CAAV,CAAA+C,WAAnB,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAAA9C,OAApB,CAAuC+C,CAAA,EAAvC,CAEE,IAAAZ,WAAA1B,oBAAA,CADaqC,CAAA/G,CAAWgH,CAAXhH,CACb,CAbsB,CA7CfiH,EAAAxH,QAAA,CAAAwG,C,CCCd,IAAA,EAAA,EACCpD,SADmBqE,EACR,EAAG,CAAA,IAAA,EAAA,IAWZ,KAAAC,SAAA,CANA,IAAAC,OAMA,CANctF,IAAAA,EAYd,KAAAuF,SAAA,CAAgB,IAAIC,OAAJ,CAAY,QAAA,CAAAC,CAAA,CAAW,CACrC,CAAAJ,SAAA,CAAgBI,CAEZ,EAAAH,OAAJ,EACEG,CAAA,CAAQ,CAAAH,OAAR,CAJmC,CAAvB,CAjBJ,CA6Bd,CAAA,UAAA,QAAA,CAAAG,QAAO,CAAC9E,CAAD,CAAQ,CACb,GAAI,IAAA2E,OAAJ,CACE,KAAU/B,MAAJ,CAAU,mBAAV,CAAN,CAGF,IAAA+B,OAAA,CAAc3E,CAEV,KAAA0E,SAAJ,EACE,IAAAA,SAAA,CAAc1E,CAAd,CARW,CAef,EAAA,UAAA,UAAA,CAAA+E,QAAS,EAAG,CACV,MAAO,KAAAH,SADG,CA7CCI,EAAAhI,QAAA,CAAAyH,C,CCHd,IAAA,EAAA,EAaCrE,SALmB6E,EAKR,CAACxB,CAAD,CAAY,CAKrB,IAAAyB,4BAAA,CAAmC,CAAA,CAMnC,KAAAvB,WAAA,CAAkBF,CAMlB,KAAA0B,qBAAA,CAA4B,IAAI5E,GAOhC,KAAA6E,eAAA,CAAsBC,QAAA,CAAAC,CAAA,CAAM,CAAA,MAAAA,EAAA,EAAA,CAM5B,KAAAC,cAAA,CAAqB,CAAA,CAMrB,KAAAC,oBAAA,CAA2B,EAM3B,KAAAC,8BAAA,CAAqC,IAAIjB,CAAAxH,QAAJ,CAAiCyG,CAAjC,CAA4CiC,QAA5C,CA1ChB;AAiDvB,CAAA,UAAA,OAAA,CAAAC,QAAM,CAACzH,CAAD,CAAYkC,CAAZ,CAAyB,CAAA,IAAA,EAAA,IAC7B,IAAM,EAAAA,CAAA,WAAuBwF,SAAvB,CAAN,CACE,KAAM,KAAIC,SAAJ,CAAc,gDAAd,CAAN,CAGF,GAAK,CAAAjH,CAAAC,yBAAA,CAAmCX,CAAnC,CAAL,CACE,KAAM,KAAI4H,WAAJ,CAAgB,oBAAhB,CAAqC5H,CAArC,CAA8C,iBAA9C,CAAN,CAGF,GAAI,IAAAyF,WAAA7C,sBAAA,CAAsC5C,CAAtC,CAAJ,CACE,KAAU0E,MAAJ,CAAU,8BAAV,CAAyC1E,CAAzC,CAAkD,6BAAlD,CAAN,CAGF,GAAI,IAAAgH,4BAAJ,CACE,KAAUtC,MAAJ,CAAU,4CAAV,CAAN,CAEF,IAAAsC,4BAAA,CAAmC,CAAA,CAEnC,KAAIrD,CAAJ,CACIG,CADJ,CAEI+D,CAFJ,CAGI/C,CAHJ;AAIIC,CACJ,IAAI,CAOF+C,IAASA,EAATA,QAAoB,CAACjG,CAAD,CAAO,CACzB,IAAMkG,EAAgBC,CAAA,CAAUnG,CAAV,CACtB,IAAsBV,IAAAA,EAAtB,GAAI4G,CAAJ,EAAqC,EAAAA,CAAA,WAAyBL,SAAzB,CAArC,CACE,KAAUhD,MAAJ,CAAU,OAAV,CAAkB7C,CAAlB,CAAsB,gCAAtB,CAAN,CAEF,MAAOkG,EALkB,CAA3BD,CALME,EAAY9F,CAAA8F,UAClB,IAAM,EAAAA,CAAA,WAAqBC,OAArB,CAAN,CACE,KAAM,KAAIN,SAAJ,CAAc,8DAAd,CAAN,CAWFhE,CAAA,CAAoBmE,CAAA,CAAY,mBAAZ,CACpBhE,EAAA,CAAuBgE,CAAA,CAAY,sBAAZ,CACvBD,EAAA,CAAkBC,CAAA,CAAY,iBAAZ,CAClBhD,EAAA,CAA2BgD,CAAA,CAAY,0BAAZ,CAC3B/C,EAAA,CAAqB7C,CAAA,mBAArB,EAA0D,EAnBxD,CAoBF,MAAO0C,CAAP,CAAU,CACV,MADU,CApBZ,OAsBU,CACR,IAAAoC,4BAAA,CAAmC,CAAA,CAD3B,CAeV,IAAAM,oBAAArE,KAAA,CAXmBP,CACjB1C,UAAAA,CADiB0C;AAEjBR,YAAAA,CAFiBQ,CAGjBiB,kBAAAA,CAHiBjB,CAIjBoB,qBAAAA,CAJiBpB,CAKjBmF,gBAAAA,CALiBnF,CAMjBoC,yBAAAA,CANiBpC,CAOjBqC,mBAAAA,CAPiBrC,CAQjB8B,kBAAmB,EARF9B,CAWnB,CAIK,KAAA2E,cAAL,GACE,IAAAA,cACA,CADqB,CAAA,CACrB,CAAA,IAAAH,eAAA,CAAoB,QAAA,EAAM,CAAA,MAAA,EAAAgB,OAAA,EAAA,CAA1B,CAFF,CAhE6B,CAsE/B;CAAA,UAAA,OAAA,CAAAA,QAAM,EAAG,CAAA,IAAA,EAAA,IAIP,IAA2B,CAAA,CAA3B,GAAI,IAAAb,cAAJ,CAAA,CACA,IAAAA,cAAA,CAAqB,CAAA,CAKrB,KAHA,IAAMc,EAAqB,IAAAb,oBAA3B,CAEMc,EAAgC,IAAI/F,GAF1C,CAGSgB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8E,CAAA7E,OAApB,CAA+CD,CAAA,EAA/C,CACE+E,CAAAzF,IAAA,CAAkCwF,CAAA,CAAmB9E,CAAnB,CAAArD,UAAlC,CAAmE,EAAnE,CAoBF,KAjBA,IAAAyF,WAAA1B,oBAAA,CAAoCyD,QAApC,CAA8C,CAC5CvD,QAASA,QAAA,CAAAlE,CAAA,CAAW,CAElB,CAAA0F,WAAA7B,eAAA,CAA+B7D,CAA/B,CAGA,IAA2BoB,IAAAA,EAA3B,GAAIpB,CAAA0D,WAAJ,CAAA,CAIA,IAAI4E,EAAqBD,CAAAvF,IAAA,CAAkC9C,CAAAC,UAAlC,CACrBqI,EAAJ,EACEA,CAAApF,KAAA,CAAwBlD,CAAxB,CANF,CALkB,CADwB,CAA9C,CAiBA,CAAmC,CAAnC,CAAOoI,CAAA7E,OAAP,CAAA,CAAsC,CACpC,IAAMZ,EAAayF,CAAAG,MAAA,EAAnB,CACMtI,EAAY0C,CAAA1C,UAElB,KAAAyF,WAAAhD,cAAA,CAA8BzC,CAA9B,CAAyC0C,CAAzC,CAIA,KADM2F,IAAAA,EAAqBD,CAAAvF,IAAA,CAAkCH,CAAA1C,UAAlC,CAArBqI,CACGhF,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgF,CAAA/E,OAApB,CAA+CD,CAAA,EAA/C,CACE,IAAAoC,WAAA7B,eAAA,CAA+ByE,CAAA,CAAmBhF,CAAnB,CAA/B,CAKF;CADMkF,CACN,CADiB,IAAAtB,qBAAApE,IAAA,CAA8B7C,CAA9B,CACjB,GACEuI,CAAA3B,QAAA,CAAiBzF,IAAAA,EAAjB,CAfkC,CA3BtC,CAJO,CAuDT,EAAA,UAAA,IAAA,CAAA0B,QAAG,CAAC7C,CAAD,CAAY,CAEb,GADM0C,CACN,CADmB,IAAA+C,WAAA7C,sBAAA,CAAsC5C,CAAtC,CACnB,CACE,MAAO0C,EAAAR,YAHI,CAaf;CAAA,UAAA,YAAA,CAAAsG,QAAW,CAACxI,CAAD,CAAY,CACrB,GAAK,CAAAU,CAAAC,yBAAA,CAAmCX,CAAnC,CAAL,CACE,MAAO2G,QAAA8B,OAAA,CAAe,IAAIb,WAAJ,CAAgB,GAAhB,CAAoB5H,CAApB,CAA6B,uCAA7B,CAAf,CAGT,KAAM0I,EAAQ,IAAAzB,qBAAApE,IAAA,CAA8B7C,CAA9B,CACd,IAAI0I,CAAJ,CACE,MAAOA,EAAA7B,UAAA,EAGH0B,EAAAA,CAAW,IAAIzB,CAAAhI,QACrB,KAAAmI,qBAAAtE,IAAA,CAA8B3C,CAA9B,CAAyCuI,CAAzC,CAEmB,KAAA9C,WAAA7C,sBAAAF,CAAsC1C,CAAtC0C,CAInB,EAAmB,CAAA,IAAA4E,oBAAAqB,KAAA,CAA8B,QAAA,CAAAC,CAAA,CAAK,CAAA,MAAAA,EAAA5I,UAAA,GAAgBA,CAAhB,CAAnC,CAAnB,EACEuI,CAAA3B,QAAA,CAAiBzF,IAAAA,EAAjB,CAGF,OAAOoH,EAAA1B,UAAA,EArBc,CAwBvB;CAAA,UAAA,0BAAA,CAAAgC,QAAyB,CAACC,CAAD,CAAQ,CAC/B,IAAAvB,8BAAArB,WAAA,EACA,KAAM6C,EAAQ,IAAA7B,eACd,KAAAA,eAAA,CAAsBC,QAAA,CAAA6B,CAAA,CAAS,CAAA,MAAAF,EAAA,CAAM,QAAA,EAAM,CAAA,MAAAC,EAAA,CAAMC,CAAN,CAAA,CAAZ,CAAA,CAHA,CAQnCzH,OAAA,sBAAA,CAAkCwF,CAClCA,EAAAiB,UAAA,OAAA,CAA4CjB,CAAAiB,UAAAP,OAC5CV,EAAAiB,UAAA,IAAA,CAAyCjB,CAAAiB,UAAAnF,IACzCkE,EAAAiB,UAAA,YAAA,CAAiDjB,CAAAiB,UAAAQ,YACjDzB,EAAAiB,UAAA,0BAAA,CAA+DjB,CAAAiB,UAAAa,0BApOhDI,EAAAnK,QAAA,CAAAiI,C,CCRd,IAAA,EAAA,EAAA,CAADpI,EAAe,CACbuK,uBAAwB3H,MAAAD,SAAA0G,UAAAmB,cADX,CAEbC,yBAA0B7H,MAAAD,SAAA0G,UAAAqB,gBAFb,CAGbC,oBAAqB/H,MAAAD,SAAA0G,UAAA9H,WAHR,CAIbqJ,iBAAkBhI,MAAAD,SAAA0G,UAAA,QAJL,CAKbwB,gBAAiBjI,MAAAD,SAAA0G,UAAA,OALJ,CAMbyB,eAAgBlI,MAAA1B,KAAAmI,UAAA0B,UANH,CAObC,iBAAkBpI,MAAA1B,KAAAmI,UAAA4B,YAPL,CAQbC,kBAAmBtI,MAAA1B,KAAAmI,UAAA8B,aARN,CASbC,iBAAkBxI,MAAA1B,KAAAmI,UAAAgC,YATL;AAUbC,kBAAmB1I,MAAA1B,KAAAmI,UAAAkC,aAVN,CAWbC,iBAAkBlC,MAAAmC,yBAAA,CAAgC7I,MAAA1B,KAAAmI,UAAhC,CAAuD,aAAvD,CAXL,CAYbqC,qBAAsB9I,MAAA+I,QAAAtC,UAAA,aAZT,CAabuC,kBAAmBtC,MAAAmC,yBAAA,CAAgC7I,MAAA+I,QAAAtC,UAAhC,CAA0D,WAA1D,CAbN,CAcbwC,qBAAsBjJ,MAAA+I,QAAAtC,UAAA/H,aAdT,CAebwK,qBAAsBlJ,MAAA+I,QAAAtC,UAAA0C,aAfT,CAgBbC,wBAAyBpJ,MAAA+I,QAAAtC,UAAA4C,gBAhBZ,CAiBbC,uBAAwBtJ,MAAA+I,QAAAtC,UAAA8C,eAjBX;AAkBbC,uBAAwBxJ,MAAA+I,QAAAtC,UAAAgD,eAlBX,CAmBbC,0BAA2B1J,MAAA+I,QAAAtC,UAAAkD,kBAnBd,CAoBbC,8BAA+B5J,MAAA+I,QAAAtC,UAAA,sBApBlB,CAqBboD,gBAAiB7J,MAAA+I,QAAAtC,UAAA,QArBJ,CAsBbqD,eAAgB9J,MAAA+I,QAAAtC,UAAA,OAtBH,CAuBbsD,eAAgB/J,MAAA+I,QAAAtC,UAAA,OAvBH,CAwBbuD,cAAehK,MAAA+I,QAAAtC,UAAA,MAxBF,CAyBbwD,oBAAqBjK,MAAA+I,QAAAtC,UAAA,YAzBR,CA0BbyD,eAAgBlK,MAAA+I,QAAAtC,UAAA,OA1BH;AA2Bb0D,WAAYnK,MAAAmK,WA3BC,CA4BbC,qBAAsB1D,MAAAmC,yBAAA,CAAgC7I,MAAAmK,WAAA1D,UAAhC,CAA6D,WAA7D,CA5BT,CA6Bb4D,iCAAkCrK,MAAAmK,WAAA1D,UAAA,sBA7BrB,CAAA6D,EAAA/M,QAAA,CAAAH,C,CCAd,IAAA,EAAA,CAQc,QAAAmN,QAAQ,CAACvG,CAAD,CAAY,CACjChE,MAAA,WAAA,CAAwB,QAAQ,EAAG,CAIjCmK,QAASA,EAAU,EAAG,CAKpB,IAAMxJ,EAAc,IAAAA,YAApB,CAEMQ,EAAa6C,CAAAzC,wBAAA,CAAkCZ,CAAlC,CACnB,IAAKQ,CAAAA,CAAL,CACE,KAAUgC,MAAJ,CAAU,gFAAV,CAAN,CAGF,IAAMF,EAAoB9B,CAAA8B,kBAE1B,IAAiC,CAAjC,GAAIA,CAAAlB,OAAJ,CAME,MALMvD,EAKCA,CALS8L,CAAA/M,QAAAoK,uBAAAlE,KAAA,CAAmCwC,QAAnC,CAA6C9E,CAAA1C,UAA7C,CAKTD,CAJPkI,MAAA8D,eAAA,CAAsBhM,CAAtB,CAA+BmC,CAAA8F,UAA/B,CAIOjI,CAHPA,CAAA0D,WAGO1D,CAHc2D,CAAA5E,QAAAkD,OAGdjC,CAFPA,CAAA8E,gBAEO9E,CAFmB2C,CAEnB3C,CADPwF,CAAApC,MAAA,CAAgBpD,CAAhB,CACOA,CAAAA,CAGHiM,KAAAA,EAAYxH,CAAAlB,OAAZ0I,CAAuC,CAAvCA,CACAjM,EAAUyE,CAAA,CAAkBwH,CAAlB,CAChB,IAAIjM,CAAJ,GAAgBlB,CAAAC,QAAhB,CACE,KAAU4F,MAAJ,CAAU,yGAAV,CAAN;AAEFF,CAAA,CAAkBwH,CAAlB,CAAA,CAA+BnN,CAAAC,QAE/BmJ,OAAA8D,eAAA,CAAsBhM,CAAtB,CAA+BmC,CAAA8F,UAA/B,CACAzC,EAAApC,MAAA,CAA4CpD,CAA5C,CAEA,OAAOA,EAjCa,CAoCtB2L,CAAA1D,UAAA,CAAuB6D,CAAA/M,QAAA4M,WAAA1D,UAEvB,OAAO0D,EA1C0B,CAAZ,EADU,CARlC,C,CCAA,IAAA,EAAA,CAgBc,QAAAO,QAAQ,CAAC1G,CAAD,CAAY3D,CAAZ,CAAyBsK,CAAzB,CAAkC,CAIvDtK,CAAA,QAAA,CAAyB,QAAQ,CAAC,CAAD,CAAW,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAE1BuK,EAAAA,CAFoCC,CAEYC,OAAA,CAAa,QAAA,CAAAhN,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBQ,KAAvB,EAA+Ba,CAAAM,YAAA,CAAsB3B,CAAtB,CAF0C,CAArB,CAKtD6M,EAAAI,QAAAC,MAAA,CAAsB,IAAtB,CAP0CH,CAO1C,CAEA,KAAK,IAAI/I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8I,CAAA7I,OAApB,CAA4CD,CAAA,EAA5C,CACEkC,CAAA1B,eAAA,CAAyBsI,CAAA,CAAgB9I,CAAhB,CAAzB,CAGF,IAAI3C,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAASqC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAdwC+I,CAcpB9I,OAApB,CAAkCD,CAAA,EAAlC,CACQhE,CACN,CAhBsC+M,CAezB,CAAM/I,CAAN,CACb,CAAIhE,CAAJ,WAAoBiL,QAApB,EACE/E,CAAAhC,YAAA,CAAsBlE,CAAtB,CAjBoC,CA0B5CuC,EAAA,OAAA,CAAwB,QAAQ,CAAC,CAAD,CAAW,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAEzBuK,EAAAA,CAFmCC,CAEaC,OAAA,CAAa,QAAA,CAAAhN,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBQ,KAAvB,EAA+Ba,CAAAM,YAAA,CAAsB3B,CAAtB,CAF0C,CAArB,CAKtD6M,EAAAM,OAAAD,MAAA,CAAqB,IAArB;AAPyCH,CAOzC,CAEA,KAAK,IAAI/I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8I,CAAA7I,OAApB,CAA4CD,CAAA,EAA5C,CACEkC,CAAA1B,eAAA,CAAyBsI,CAAA,CAAgB9I,CAAhB,CAAzB,CAGF,IAAI3C,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAASqC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAduC+I,CAcnB9I,OAApB,CAAkCD,CAAA,EAAlC,CACQhE,CACN,CAhBqC+M,CAexB,CAAM/I,CAAN,CACb,CAAIhE,CAAJ,WAAoBiL,QAApB,EACE/E,CAAAhC,YAAA,CAAsBlE,CAAtB,CAjBmC,CA9BY,CAhBxD,C,CCAA,IAAA,EAAA,CASc,QAAAoN,QAAQ,CAAClH,CAAD,CAAY,CACjC7E,CAAAgB,qBAAA,CAA+BJ,QAAA0G,UAA/B,CAAmD,eAAnD,CAME,QAAQ,CAAChI,CAAD,CAAY,CAElB,GAAI,IAAAoE,iBAAJ,CAA2B,CACzB,IAAM1B,EAAa6C,CAAA3C,sBAAA,CAAgC5C,CAAhC,CACnB,IAAI0C,CAAJ,CACE,MAAO,KAAKA,CAAAR,YAHW,CAOrBuC,CAAAA,CACHoH,CAAA/M,QAAAoK,uBAAAlE,KAAA,CAAmC,IAAnC,CAAyChF,CAAzC,CACHuF,EAAApC,MAAA,CAAgBsB,CAAhB,CACA,OAAOA,EAZW,CANtB,CAqBA/D,EAAAgB,qBAAA,CAA+BJ,QAAA0G,UAA/B,CAAmD,YAAnD,CAOE,QAAQ,CAAC3I,CAAD,CAAOqN,CAAP,CAAa,CACbC,CAAAA,CAAQd,CAAA/M,QAAAwK,oBAAAtE,KAAA,CAAgC,IAAhC,CAAsC3F,CAAtC,CAA4CqN,CAA5C,CAET,KAAAtI,iBAAL,CAGEmB,CAAAxB,oBAAA,CAA8B4I,CAA9B,CAHF,CACEpH,CAAArC,UAAA,CAAoByJ,CAApB,CAIF,OAAOA,EARY,CAPvB,CAoBAjM,EAAAgB,qBAAA,CAA+BJ,QAAA0G,UAA/B,CAAmD,iBAAnD;AAOE,QAAQ,CAAC7C,CAAD,CAAYnF,CAAZ,CAAuB,CAE7B,GAAI,IAAAoE,iBAAJ,GAA4C,IAA5C,GAA8Be,CAA9B,EAXYyH,8BAWZ,GAAoDzH,CAApD,EAA4E,CAC1E,IAAMzC,EAAa6C,CAAA3C,sBAAA,CAAgC5C,CAAhC,CACnB,IAAI0C,CAAJ,CACE,MAAO,KAAKA,CAAAR,YAH4D,CAOtEuC,CAAAA,CACHoH,CAAA/M,QAAAsK,yBAAApE,KAAA,CAAqC,IAArC,CAA2CG,CAA3C,CAAsDnF,CAAtD,CACHuF,EAAApC,MAAA,CAAgBsB,CAAhB,CACA,OAAOA,EAZsB,CAPjC,CAsBAoI,EAAA/N,QAAA,CAAgByG,CAAhB,CAA2BjE,QAAA0G,UAA3B,CAA+C,CAC7CsE,QAAST,CAAA/M,QAAAyK,iBADoC,CAE7CiD,OAAQX,CAAA/M,QAAA0K,gBAFqC,CAA/C,CAhEiC,CATlC,C,CCAA,IAAA,EAAA,CAOc,QAAAsD,QAAQ,CAACvH,CAAD,CAAY,CA+JjCwH,QAASA,EAAiB,CAACnL,CAAD,CAAcoL,CAAd,CAA8B,CACtD/E,MAAAgF,eAAA,CAAsBrL,CAAtB,CAAmC,aAAnC,CAAkD,CAChDsL,WAAYF,CAAAE,WADoC,CAEhDC,aAAc,CAAA,CAFkC,CAGhDtK,IAAKmK,CAAAnK,IAH2C,CAIhDF,IAAyBA,QAAQ,CAACyK,CAAD,CAAgB,CAE/C,GAAI,IAAAxN,SAAJ,GAAsBC,IAAAwN,UAAtB,CACEL,CAAArK,IAAAqC,KAAA,CAAwB,IAAxB,CAA8BoI,CAA9B,CADF,KAAA,CAKA,IAAIE,EAAenM,IAAAA,EAGnB,IAAI,IAAAZ,WAAJ,CAAqB,CAGnB,IAAMgN,EAAa,IAAAA,WAAnB,CACMC,EAAmBD,CAAAjK,OACzB,IAAuB,CAAvB,CAAIkK,CAAJ,EAA4B9M,CAAAM,YAAA,CAAsB,IAAtB,CAA5B,CAGE,IADA,IAAAsM,EAAmBG,KAAJ,CAAUD,CAAV,CAAf,CACSnK,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmK,CAApB,CAAsCnK,CAAA,EAAtC,CACEiK,CAAA,CAAajK,CAAb,CAAA,CAAkBkK,CAAA,CAAWlK,CAAX,CATH,CAcrB2J,CAAArK,IAAAqC,KAAA,CAAwB,IAAxB,CAA8BoI,CAA9B,CAEA,IAAIE,CAAJ,CACE,IAASjK,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBiK,CAAAhK,OAApB,CAAyCD,CAAA,EAAzC,CACEkC,CAAA1B,eAAA,CAAyByJ,CAAA,CAAajK,CAAb,CAAzB,CA1BJ,CAF+C,CAJD,CAAlD,CADsD,CA3JxD3C,CAAAgB,qBAAA,CAA+B7B,IAAAmI,UAA/B,CAA+C,cAA/C,CAOE,QAAQ,CAAC3I,CAAD,CAAOqO,CAAP,CAAgB,CACtB,GAAIrO,CAAJ,WAAoBsO,iBAApB,CAAsC,CACpC,IAAMC;AAAgBH,KAAAzF,UAAA6F,MAAAtB,MAAA,CAA4BlN,CAAAkO,WAA5B,CAChBO,EAAAA,CAAejC,CAAA/M,QAAA+K,kBAAA7E,KAAA,CAA8B,IAA9B,CAAoC3F,CAApC,CAA0CqO,CAA1C,CAKrB,IAAIhN,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAASqC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBuK,CAAAtK,OAApB,CAA0CD,CAAA,EAA1C,CACEkC,CAAAhC,YAAA,CAAsBqK,CAAA,CAAcvK,CAAd,CAAtB,CAIJ,OAAOyK,EAb6B,CAgBhCC,CAAAA,CAAmBrN,CAAAM,YAAA,CAAsB3B,CAAtB,CACnByO,EAAAA,CAAejC,CAAA/M,QAAA+K,kBAAA7E,KAAA,CAA8B,IAA9B,CAAoC3F,CAApC,CAA0CqO,CAA1C,CAEjBK,EAAJ,EACExI,CAAA1B,eAAA,CAAyBxE,CAAzB,CAGEqB,EAAAM,YAAA,CAAsB,IAAtB,CAAJ,EACEuE,CAAAhC,YAAA,CAAsBlE,CAAtB,CAGF,OAAOyO,EA5Be,CAP1B,CAsCApN,EAAAgB,qBAAA,CAA+B7B,IAAAmI,UAA/B,CAA+C,aAA/C,CAME,QAAQ,CAAC3I,CAAD,CAAO,CACb,GAAIA,CAAJ,WAAoBsO,iBAApB,CAAsC,CACpC,IAAMC,EAAgBH,KAAAzF,UAAA6F,MAAAtB,MAAA,CAA4BlN,CAAAkO,WAA5B,CAChBO,EAAAA,CAAejC,CAAA/M,QAAA6K,iBAAA3E,KAAA,CAA6B,IAA7B,CAAmC3F,CAAnC,CAKrB,IAAIqB,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAAK,IAAIqC;AAAI,CAAb,CAAgBA,CAAhB,CAAoBuK,CAAAtK,OAApB,CAA0CD,CAAA,EAA1C,CACEkC,CAAAhC,YAAA,CAAsBqK,CAAA,CAAcvK,CAAd,CAAtB,CAIJ,OAAOyK,EAb6B,CAgBhCC,CAAAA,CAAmBrN,CAAAM,YAAA,CAAsB3B,CAAtB,CACnByO,EAAAA,CAAejC,CAAA/M,QAAA6K,iBAAA3E,KAAA,CAA6B,IAA7B,CAAmC3F,CAAnC,CAEjB0O,EAAJ,EACExI,CAAA1B,eAAA,CAAyBxE,CAAzB,CAGEqB,EAAAM,YAAA,CAAsB,IAAtB,CAAJ,EACEuE,CAAAhC,YAAA,CAAsBlE,CAAtB,CAGF,OAAOyO,EA5BM,CANjB,CAqCApN,EAAAgB,qBAAA,CAA+B7B,IAAAmI,UAA/B,CAA+C,WAA/C,CAME,QAAQ,CAAC0E,CAAD,CAAO,CACPC,CAAAA,CAAQd,CAAA/M,QAAA2K,eAAAzE,KAAA,CAA2B,IAA3B,CAAiC0H,CAAjC,CAGT,KAAAsB,cAAA5J,iBAAL,CAGEmB,CAAAxB,oBAAA,CAA8B4I,CAA9B,CAHF,CACEpH,CAAArC,UAAA,CAAoByJ,CAApB,CAIF,OAAOA,EATM,CANjB,CAkBAjM,EAAAgB,qBAAA,CAA+B7B,IAAAmI,UAA/B,CAA+C,aAA/C,CAME,QAAQ,CAAC3I,CAAD,CAAO,CACb,IAAM0O,EAAmBrN,CAAAM,YAAA,CAAsB3B,CAAtB,CAAzB,CACMyO,EAAejC,CAAA/M,QAAAiL,iBAAA/E,KAAA,CAA6B,IAA7B,CAAmC3F,CAAnC,CAEjB0O,EAAJ,EACExI,CAAA1B,eAAA,CAAyBxE,CAAzB,CAGF;MAAOyO,EARM,CANjB,CAiBApN,EAAAgB,qBAAA,CAA+B7B,IAAAmI,UAA/B,CAA+C,cAA/C,CAOE,QAAQ,CAACiG,CAAD,CAAeC,CAAf,CAA6B,CACnC,GAAID,CAAJ,WAA4BN,iBAA5B,CAA8C,CAC5C,IAAMC,EAAgBH,KAAAzF,UAAA6F,MAAAtB,MAAA,CAA4B0B,CAAAV,WAA5B,CAChBO,EAAAA,CAAejC,CAAA/M,QAAAmL,kBAAAjF,KAAA,CAA8B,IAA9B,CAAoCiJ,CAApC,CAAkDC,CAAlD,CAKrB,IAAIxN,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CAEE,IADAuE,CAAA1B,eAAA,CAAyBqK,CAAzB,CACS7K,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBuK,CAAAtK,OAApB,CAA0CD,CAAA,EAA1C,CACEkC,CAAAhC,YAAA,CAAsBqK,CAAA,CAAcvK,CAAd,CAAtB,CAIJ,OAAOyK,EAdqC,CAiBxCK,IAAAA,EAA2BzN,CAAAM,YAAA,CAAsBiN,CAAtB,CAA3BE,CACAL,EAAejC,CAAA/M,QAAAmL,kBAAAjF,KAAA,CAA8B,IAA9B,CAAoCiJ,CAApC,CAAkDC,CAAlD,CADfC,CAEAC,EAAkB1N,CAAAM,YAAA,CAAsB,IAAtB,CAEpBoN,EAAJ,EACE7I,CAAA1B,eAAA,CAAyBqK,CAAzB,CAGEC,EAAJ,EACE5I,CAAA1B,eAAA,CAAyBoK,CAAzB,CAGEG,EAAJ,EACE7I,CAAAhC,YAAA,CAAsB0K,CAAtB,CAGF,OAAOH,EAlC4B,CAPvC,CAqFIjC,EAAA/M,QAAAqL,iBAAJ,EAA+B0B,CAAA/M,QAAAqL,iBAAAtH,IAA/B;AACEkK,CAAA,CAAkBlN,IAAAmI,UAAlB,CAAkC6D,CAAA/M,QAAAqL,iBAAlC,CADF,CAGE5E,CAAAxC,SAAA,CAAmB,QAAQ,CAAChD,CAAD,CAAU,CACnCgN,CAAA,CAAkBhN,CAAlB,CAA2B,CACzBmN,WAAY,CAAA,CADa,CAEzBC,aAAc,CAAA,CAFW,CAKzBtK,IAAyBA,QAAQ,EAAG,CAIlC,IAFA,IAAMwL,EAAQ,EAAd,CAEShL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAkK,WAAAjK,OAApB,CAA4CD,CAAA,EAA5C,CACEgL,CAAApL,KAAA,CAAW,IAAAsK,WAAA,CAAgBlK,CAAhB,CAAAiL,YAAX,CAGF,OAAOD,EAAAE,KAAA,CAAW,EAAX,CAR2B,CALX,CAezB5L,IAAyBA,QAAQ,CAACyK,CAAD,CAAgB,CAC/C,IAAA,CAAO,IAAA7M,WAAP,CAAA,CACEsL,CAAA/M,QAAAiL,iBAAA/E,KAAA,CAA6B,IAA7B,CAAmC,IAAAzE,WAAnC,CAEFsL,EAAA/M,QAAA6K,iBAAA3E,KAAA,CAA6B,IAA7B,CAAmCwC,QAAAgH,eAAA,CAAwBpB,CAAxB,CAAnC,CAJ+C,CAfxB,CAA3B,CADmC,CAArC,CA1M+B,CAPlC,C,CCAA,IAAA,EAAA,CAkBc,QAAAqB,QAAQ,CAAClJ,CAAD,CAAY3D,CAAZ,CAAyBsK,CAAzB,CAAkC,CAIvDtK,CAAA,OAAA,CAAwB,QAAQ,CAAC,CAAD,CAAW,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAEzBuK,EAAAA,CAFmCC,CAEaC,OAAA,CAAa,QAAA,CAAAhN,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBQ,KAAvB,EAA+Ba,CAAAM,YAAA,CAAsB3B,CAAtB,CAF0C,CAArB,CAKtD6M,EAAAwC,OAAAnC,MAAA,CAAqB,IAArB,CAPyCH,CAOzC,CAEA,KAAK,IAAI/I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8I,CAAA7I,OAApB,CAA4CD,CAAA,EAA5C,CACEkC,CAAA1B,eAAA,CAAyBsI,CAAA,CAAgB9I,CAAhB,CAAzB,CAGF,IAAI3C,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAASqC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAduC+I,CAcnB9I,OAApB,CAAkCD,CAAA,EAAlC,CACQhE,CACN,CAhBqC+M,CAexB,CAAM/I,CAAN,CACb,CAAIhE,CAAJ,WAAoBiL,QAApB,EACE/E,CAAAhC,YAAA,CAAsBlE,CAAtB,CAjBmC,CA0B3CuC,EAAA,MAAA,CAAuB,QAAQ,CAAC,CAAD,CAAW,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAExBuK,EAAAA,CAFkCC,CAEcC,OAAA,CAAa,QAAA,CAAAhN,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBQ,KAAvB,EAA+Ba,CAAAM,YAAA,CAAsB3B,CAAtB,CAF0C,CAArB,CAKtD6M,EAAAyC,MAAApC,MAAA,CAAoB,IAApB;AAPwCH,CAOxC,CAEA,KAAK,IAAI/I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8I,CAAA7I,OAApB,CAA4CD,CAAA,EAA5C,CACEkC,CAAA1B,eAAA,CAAyBsI,CAAA,CAAgB9I,CAAhB,CAAzB,CAGF,IAAI3C,CAAAM,YAAA,CAAsB,IAAtB,CAAJ,CACE,IAASqC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAdsC+I,CAclB9I,OAApB,CAAkCD,CAAA,EAAlC,CACQhE,CACN,CAhBoC+M,CAevB,CAAM/I,CAAN,CACb,CAAIhE,CAAJ,WAAoBiL,QAApB,EACE/E,CAAAhC,YAAA,CAAsBlE,CAAtB,CAjBkC,CA0B1CuC,EAAA,YAAA,CAA6B,QAAQ,CAAC,CAAD,CAAW,CAAV,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAE9BuK,KAAAA,EAFwCC,CAEQC,OAAA,CAAa,QAAA,CAAAhN,CAAA,CAAQ,CAEzE,MAAOA,EAAP,WAAuBQ,KAAvB,EAA+Ba,CAAAM,YAAA,CAAsB3B,CAAtB,CAF0C,CAArB,CAAhD8M,CAKAyC,EAAelO,CAAAM,YAAA,CAAsB,IAAtB,CAErBkL,EAAA2C,YAAAtC,MAAA,CAA0B,IAA1B,CAT8CH,CAS9C,CAEA,KAAK,IAAI/I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8I,CAAA7I,OAApB,CAA4CD,CAAA,EAA5C,CACEkC,CAAA1B,eAAA,CAAyBsI,CAAA,CAAgB9I,CAAhB,CAAzB,CAGF,IAAIuL,CAAJ,CAEE,IADArJ,CAAA1B,eAAA,CAAyB,IAAzB,CACSR,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAjB4C+I,CAiBxB9I,OAApB,CAAkCD,CAAA,EAAlC,CACQhE,CACN,CAnB0C+M,CAkB7B,CAAM/I,CAAN,CACb,CAAIhE,CAAJ,WAAoBiL,QAApB,EACE/E,CAAAhC,YAAA,CAAsBlE,CAAtB,CApBwC,CA0BhDuC;CAAA,OAAA,CAAwB,QAAQ,EAAG,CACjC,IAAMgN,EAAelO,CAAAM,YAAA,CAAsB,IAAtB,CAErBkL,EAAA4C,OAAA9J,KAAA,CAAoB,IAApB,CAEI4J,EAAJ,EACErJ,CAAA1B,eAAA,CAAyB,IAAzB,CAN+B,CAlFoB,CAlBxD,C,CCAA,IAAA,EAAA,CAWc,QAAAkL,QAAQ,CAACxJ,CAAD,CAAY,CAkBjCyJ,QAASA,EAAe,CAACpN,CAAD,CAAcoL,CAAd,CAA8B,CACpD/E,MAAAgF,eAAA,CAAsBrL,CAAtB,CAAmC,WAAnC,CAAgD,CAC9CsL,WAAYF,CAAAE,WADkC,CAE9CC,aAAc,CAAA,CAFgC,CAG9CtK,IAAKmK,CAAAnK,IAHyC,CAI9CF,IAA4BA,QAAQ,CAACsM,CAAD,CAAa,CAAA,IAAA,EAAA,IAAA,CAS3CC,EAAkB/N,IAAAA,EARFT,EAAAM,YAAAA,CAAsB,IAAtBA,CASpB,GACEkO,CACA,CADkB,EAClB,CAAAxO,CAAAjB,2BAAA,CAAqC,IAArC,CAA2C,QAAA,CAAAM,CAAA,CAAW,CAChDA,CAAJ,GAAgB,CAAhB,EACEmP,CAAAjM,KAAA,CAAqBlD,CAArB,CAFkD,CAAtD,CAFF,CASAiN,EAAArK,IAAAqC,KAAA,CAAwB,IAAxB,CAA8BiK,CAA9B,CAEA,IAAIC,CAAJ,CACE,IAAK,IAAI7L,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6L,CAAA5L,OAApB,CAA4CD,CAAA,EAA5C,CAAiD,CAC/C,IAAMtD,EAAUmP,CAAA,CAAgB7L,CAAhB,CACZtD,EAAA0D,WAAJ,GAA2BC,CAAA5E,QAAAkD,OAA3B,EACEuD,CAAAzB,qBAAA,CAA+B/D,CAA/B,CAH6C,CAU9C,IAAAiO,cAAA5J,iBAAL,CAGEmB,CAAAxB,oBAAA,CAA8B,IAA9B,CAHF,CACEwB,CAAArC,UAAA,CAAoB,IAApB,CAIF,OAAO+L,EArCwC,CAJH,CAAhD,CADoD,CAwKtDE,QAASA,EAA2B,CAACvN,CAAD,CAAcwN,CAAd,CAA0B,CAC5D1O,CAAAgB,qBAAA,CAA+BE,CAA/B;AAA4C,uBAA5C,CAOE,QAAQ,CAACyN,CAAD,CAAQtP,CAAR,CAAiB,CACvB,IAAM6O,EAAelO,CAAAM,YAAA,CAAsBjB,CAAtB,CACfuP,EAAAA,CACHF,CAAApK,KAAA,CAAgB,IAAhB,CAAsBqK,CAAtB,CAA6BtP,CAA7B,CAEC6O,EAAJ,EACErJ,CAAA1B,eAAA,CAAyB9D,CAAzB,CAGEW,EAAAM,YAAA,CAAsBsO,CAAtB,CAAJ,EACE/J,CAAAhC,YAAA,CAAsBxD,CAAtB,CAEF,OAAOuP,EAZgB,CAP3B,CAD4D,CAzL1DzD,CAAA/M,QAAAuL,qBAAJ,CACE3J,CAAAgB,qBAAA,CAA+B4I,OAAAtC,UAA/B,CAAkD,cAAlD,CAME,QAAQ,CAACuH,CAAD,CAAO,CAGb,MADA,KAAA9O,gBACA,CAFMD,CAEN,CAFmBqL,CAAA/M,QAAAuL,qBAAArF,KAAA,CAAiC,IAAjC,CAAuCuK,CAAvC,CADN,CANjB,CADF,CAaEC,OAAAC,KAAA,CAAa,0DAAb,CAmDF,IAAI5D,CAAA/M,QAAAyL,kBAAJ,EAAgCsB,CAAA/M,QAAAyL,kBAAA1H,IAAhC,CACEmM,CAAA,CAAgB1E,OAAAtC,UAAhB,CAAmC6D,CAAA/M,QAAAyL,kBAAnC,CADF;IAEO,IAAIsB,CAAA/M,QAAA6M,qBAAJ,EAAmCE,CAAA/M,QAAA6M,qBAAA9I,IAAnC,CACLmM,CAAA,CAAgBtD,UAAA1D,UAAhB,CAAsC6D,CAAA/M,QAAA6M,qBAAtC,CADK,KAEA,CAGL,IAAM+D,EAAS7D,CAAA/M,QAAAoK,uBAAAlE,KAAA,CAAmCwC,QAAnC,CAA6C,KAA7C,CAEfjC,EAAAxC,SAAA,CAAmB,QAAQ,CAAChD,CAAD,CAAU,CACnCiP,CAAA,CAAgBjP,CAAhB,CAAyB,CACvBmN,WAAY,CAAA,CADW,CAEvBC,aAAc,CAAA,CAFS,CAMvBtK,IAA4BA,QAAQ,EAAG,CACrC,MAAOgJ,EAAA/M,QAAA2K,eAAAzE,KAAA,CAA2B,IAA3B,CAAiC,CAAA,CAAjC,CAAA2K,UAD8B,CANhB,CAYvBhN,IAA4BA,QAAQ,CAACyK,CAAD,CAAgB,CAKlD,IAAMwC,EAA6B,UAAnB,GAAA,IAAA5P,UAAA,CAAsE,IAAtC4P,QAAhC,CAAuF,IAGvG,KAFAF,CAAAC,UAEA,CAFmBvC,CAEnB,CAAmC,CAAnC,CAAOwC,CAAArC,WAAAjK,OAAP,CAAA,CACEuI,CAAA/M,QAAAiL,iBAAA/E,KAAA,CAA6B4K,CAA7B,CAAsCA,CAAArC,WAAA,CAAmB,CAAnB,CAAtC,CAEF,KAAA,CAAkC,CAAlC,CAAOmC,CAAAnC,WAAAjK,OAAP,CAAA,CACEuI,CAAA/M,QAAA6K,iBAAA3E,KAAA,CAA6B4K,CAA7B;AAAsCF,CAAAnC,WAAA,CAAkB,CAAlB,CAAtC,CAZgD,CAZ7B,CAAzB,CADmC,CAArC,CALK,CAsCP7M,CAAAgB,qBAAA,CAA+B4I,OAAAtC,UAA/B,CAAkD,cAAlD,CAME,QAAQ,CAACnG,CAAD,CAAOqD,CAAP,CAAiB,CAEvB,GAAI,IAAAzB,WAAJ,GAAwBC,CAAA5E,QAAAkD,OAAxB,CACE,MAAO6J,EAAA/M,QAAA2L,qBAAAzF,KAAA,CAAiC,IAAjC,CAAuCnD,CAAvC,CAA6CqD,CAA7C,CAGT,KAAMD,EAAW4G,CAAA/M,QAAA0L,qBAAAxF,KAAA,CAAiC,IAAjC,CAAuCnD,CAAvC,CACjBgK,EAAA/M,QAAA2L,qBAAAzF,KAAA,CAAiC,IAAjC,CAAuCnD,CAAvC,CAA6CqD,CAA7C,CACAA,EAAA,CAAW2G,CAAA/M,QAAA0L,qBAAAxF,KAAA,CAAiC,IAAjC,CAAuCnD,CAAvC,CACX0D,EAAAT,yBAAA,CAAmC,IAAnC,CAAyCjD,CAAzC,CAA+CoD,CAA/C,CAAyDC,CAAzD,CAAmE,IAAnE,CATuB,CAN3B,CAkBAxE,EAAAgB,qBAAA,CAA+B4I,OAAAtC,UAA/B,CAAkD,gBAAlD,CAOE,QAAQ,CAAC7C,CAAD,CAAYtD,CAAZ,CAAkBqD,CAAlB,CAA4B,CAElC,GAAI,IAAAzB,WAAJ,GAAwBC,CAAA5E,QAAAkD,OAAxB,CACE,MAAO6J,EAAA/M,QAAAiM,uBAAA/F,KAAA,CAAmC,IAAnC;AAAyCG,CAAzC,CAAoDtD,CAApD,CAA0DqD,CAA1D,CAGT,KAAMD,EAAW4G,CAAA/M,QAAA+L,uBAAA7F,KAAA,CAAmC,IAAnC,CAAyCG,CAAzC,CAAoDtD,CAApD,CACjBgK,EAAA/M,QAAAiM,uBAAA/F,KAAA,CAAmC,IAAnC,CAAyCG,CAAzC,CAAoDtD,CAApD,CAA0DqD,CAA1D,CACAA,EAAA,CAAW2G,CAAA/M,QAAA+L,uBAAA7F,KAAA,CAAmC,IAAnC,CAAyCG,CAAzC,CAAoDtD,CAApD,CACX0D,EAAAT,yBAAA,CAAmC,IAAnC,CAAyCjD,CAAzC,CAA+CoD,CAA/C,CAAyDC,CAAzD,CAAmEC,CAAnE,CATkC,CAPtC,CAmBAzE,EAAAgB,qBAAA,CAA+B4I,OAAAtC,UAA/B,CAAkD,iBAAlD,CAKE,QAAQ,CAACnG,CAAD,CAAO,CAEb,GAAI,IAAA4B,WAAJ,GAAwBC,CAAA5E,QAAAkD,OAAxB,CACE,MAAO6J,EAAA/M,QAAA6L,wBAAA3F,KAAA,CAAoC,IAApC,CAA0CnD,CAA1C,CAGT,KAAMoD,EAAW4G,CAAA/M,QAAA0L,qBAAAxF,KAAA,CAAiC,IAAjC,CAAuCnD,CAAvC,CACjBgK,EAAA/M,QAAA6L,wBAAA3F,KAAA,CAAoC,IAApC,CAA0CnD,CAA1C,CACiB,KAAjB,GAAIoD,CAAJ,EACEM,CAAAT,yBAAA,CAAmC,IAAnC;AAAyCjD,CAAzC,CAA+CoD,CAA/C,CAAyD,IAAzD,CAA+D,IAA/D,CATW,CALjB,CAkBAvE,EAAAgB,qBAAA,CAA+B4I,OAAAtC,UAA/B,CAAkD,mBAAlD,CAME,QAAQ,CAAC7C,CAAD,CAAYtD,CAAZ,CAAkB,CAExB,GAAI,IAAA4B,WAAJ,GAAwBC,CAAA5E,QAAAkD,OAAxB,CACE,MAAO6J,EAAA/M,QAAAmM,0BAAAjG,KAAA,CAAsC,IAAtC,CAA4CG,CAA5C,CAAuDtD,CAAvD,CAGT,KAAMoD,EAAW4G,CAAA/M,QAAA+L,uBAAA7F,KAAA,CAAmC,IAAnC,CAAyCG,CAAzC,CAAoDtD,CAApD,CACjBgK,EAAA/M,QAAAmM,0BAAAjG,KAAA,CAAsC,IAAtC,CAA4CG,CAA5C,CAAuDtD,CAAvD,CAIA,KAAMqD,EAAW2G,CAAA/M,QAAA+L,uBAAA7F,KAAA,CAAmC,IAAnC,CAAyCG,CAAzC,CAAoDtD,CAApD,CACboD,EAAJ,GAAiBC,CAAjB,EACEK,CAAAT,yBAAA,CAAmC,IAAnC,CAAyCjD,CAAzC,CAA+CoD,CAA/C,CAAyDC,CAAzD,CAAmEC,CAAnE,CAbsB,CAN5B,CAgDI0G,EAAA/M,QAAA8M,iCAAJ,CACEuD,CAAA,CAA4BzD,UAAA1D,UAA5B,CAAkD6D,CAAA/M,QAAA8M,iCAAlD,CADF;AAEWC,CAAA/M,QAAAqM,8BAAJ,CACLgE,CAAA,CAA4B7E,OAAAtC,UAA5B,CAA+C6D,CAAA/M,QAAAqM,8BAA/C,CADK,CAGLqE,OAAAC,KAAA,CAAa,mEAAb,CAIF5C,EAAA/N,QAAA,CAAgByG,CAAhB,CAA2B+E,OAAAtC,UAA3B,CAA8C,CAC5CsE,QAAST,CAAA/M,QAAAsM,gBADmC,CAE5CoB,OAAQX,CAAA/M,QAAAuM,eAFoC,CAA9C,CAKAwE,EAAA/Q,QAAA,CAAeyG,CAAf,CAA0B+E,OAAAtC,UAA1B,CAA6C,CAC3C0G,OAAQ7C,CAAA/M,QAAAwM,eADmC,CAE3CqD,MAAO9C,CAAA/M,QAAAyM,cAFoC,CAG3CsD,YAAahD,CAAA/M,QAAA0M,oBAH8B,CAI3CsD,OAAQjD,CAAA/M,QAAA2M,eAJmC,CAA7C,CAhOiC,CAXlC,C;;;;;;;;;ACkBD,IAAMqE,EAAsBvO,MAAA,eAE5B,IAAKuO,CAAAA,CAAL,EACKA,CAAA,cADL,EAE8C,UAF9C,EAEM,MAAOA,EAAA,OAFb,EAG2C,UAH3C,EAGM,MAAOA,EAAA,IAHb,CAGwD,CAEtD,IAAMvK,EAAY,IAAIF,CAAAvG,QAEtBiR,EAAAjR,QAAA,CAAgByG,CAAhB,CACAyK,EAAAlR,QAAA,CAAcyG,CAAd,CACA0K,EAAAnR,QAAA,CAAUyG,CAAV,CACA2K,EAAApR,QAAA,CAAayG,CAAb,CAGAiC,SAAApD,iBAAA,CAA4B,CAAA,CAG5B,KAAM+L,eAAiB,IAAIlH,CAAAnK,QAAJ,CAA0ByG,CAA1B,CAEvB0C,OAAAgF,eAAA,CAAsB1L,MAAtB,CAA8B,gBAA9B,CAAgD,CAC9C4L,aAAc,CAAA,CADgC,CAE9CD,WAAY,CAAA,CAFkC,CAG9CpL,MAAOqO,cAHuC,CAAhD,CAfsD","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n    /** @type {!Map<string, !Array<!Element>>} */\n    const localNameToUpgradableElements = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      localNameToUpgradableElements.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Attempt to upgrade using *non-pending* definitions.\n        this._internals.upgradeElement(element);\n\n        // If the element was upgraded, then no pending definition applies to it.\n        if (element.__CE_state !== undefined) return;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the set of upgradable elements for that definition.\n        let upgradableElements = localNameToUpgradableElements.get(element.localName);\n        if (upgradableElements) {\n          upgradableElements.push(element);\n        }\n      },\n    });\n\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      this._internals.setDefinition(localName, definition);\n\n      // Attempt to upgrade all applicable elements.\n      const upgradableElements = localNameToUpgradableElements.get(definition.localName);\n      for (let i = 0; i < upgradableElements.length; i++) {\n        this._internals.upgradeElement(upgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  XULElement: window.XULElement,\n  XULElement_innerHTML: Object.getOwnPropertyDescriptor(window.XULElement.prototype, 'innerHTML'),\n  XULElement_insertAdjacentElement: window.XULElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['XULElement'] = (function() {\n    /**\n     * @type {function(new: XULElement): !XULElement}\n     */\n    function XULElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The XULElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!XULElement} */ (element));\n\n      return element;\n    }\n\n    XULElement.prototype = Native.XULElement.prototype;\n\n    return XULElement;\n  })();\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.XULElement_innerHTML && Native.XULElement_innerHTML.get) {\n    patch_innerHTML(XULElement.prototype, Native.XULElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.XULElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(XULElement.prototype, Native.XULElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchXULElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchXULElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n"]}